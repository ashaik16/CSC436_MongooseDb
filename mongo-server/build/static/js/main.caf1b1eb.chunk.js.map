{"version":3,"sources":["Contexts.js","Todo/Todo.js","pages/TodoPage.js","Todo/TodoList.js","User/User.js","User/UserList.js","pages/HomePage.js","User/Login.js","User/Logout.js","User/Register.js","User/UserBar.js","pages/UserListPage.js","pages/UserPage.js","Reducer.js","Todo/CreateTodo.js","pages/SuccessMessagePage.js","App.js","index.js"],"names":["StateContext","React","createContext","state","dispatch","Todo","props","navigation","useNavigation","title","author","authorId","description","dateCreated","completed","dateCompleted","useState","toggleCompleteTodoFailed","setToggleCompleteTodoFailed","deleteTodoFailed","setDeleteTodoFailed","status","setStatus","id","_id","short","useContext","user","processedContent","length","substring","useResource","updatedComplete","updateDateCompleted","url","method","headers","Authorization","access_token","data","toggleData","toggleTodoFunction","showDeleteModal","setShowDeleteModal","useEffect","isLoading","error","code","type","navigate","deleteData","deleteTodoFunction","handleClose","Card","style","backgroundColor","Body","Header","as","href","Title","dark","Subtitle","username","Form","Check","label","name","defaultChecked","value","onClick","date","Date","toLocaleDateString","time","toLocaleTimeString","htmlFor","disabled","Button","variant","Text","color","Modal","show","onHide","onSubmit","event","preventDefault","closeButton","Label","Footer","TodoPage","todo","getTodo","TodoList","todoList","map","todoItem","i","User","UserList","userList","HomePage","getTodos","Login","setShowLogin","setUsername","password","setPassword","loginFailed","setLoginFailed","login","Control","onChange","evt","target","Logout","e","Register","setShowRegister","userName","setUserName","registrationFailed","setRegistrationFailed","passwordConfirmation","register","substr","required","setCustomValidity","UserBar","showLogin","showRegister","Container","CardGroup","border","Img","className","src","alt","width","alignSelf","marginLeft","marginTop","height","UserListPage","getUsers","UserPage","getUser","appReducer","action","userListReducer","undefined","userReducer","filter","x","todoReducer","CreateTodo","createTodoFailed","setCreateTodoFailed","createTodoObject","setCreateTodoObject","createTodos","alignItems","SuccessMessagePage","message","padding","toUpperCase","App","useReducer","routes","mount","route","view","req","params","Provider","axiosInstance","axios","create","baseURL","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.caf1b1eb.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const StateContext = React.createContext({\r\n  state: {},\r\n  dispatch: () => {},\r\n});\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Button, Card } from \"react-bootstrap\";\r\nimport { Link, useNavigation } from \"react-navi\";\r\nimport { useResource } from \"react-request-hook\";\r\nimport { StateContext } from \"../Contexts\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nexport default function Todo(props) {\r\n  const navigation = useNavigation();\r\n  const title = props.title;\r\n  const author = props.author;\r\n  const authorId = props.authorId;\r\n  const description = props.description;\r\n  const dateCreated = props.dateCreated;\r\n  const completed = props.completed == \"true\" ? true : false;\r\n  const dateCompleted = props.dateCompleted;\r\n  const [toggleCompleteTodoFailed, setToggleCompleteTodoFailed] =\r\n    useState(false);\r\n  const [deleteTodoFailed, setDeleteTodoFailed] = useState(false);\r\n  const [status, setStatus] = useState(\"\");\r\n  const id = props._id;\r\n  const short = props.short;\r\n  const { state, dispatch } = useContext(StateContext);\r\n  const { user } = state;\r\n  let processedContent = description;\r\n  if (short) {\r\n    if (description.length > 30) {\r\n      processedContent = description.substring(0, 30) + \"...\";\r\n    }\r\n  }\r\n  const [toggleData, toggleTodoFunction] = useResource(\r\n    (id, updatedComplete, updateDateCompleted) => ({\r\n      url: \"/todoList/\" + id,\r\n      method: \"patch\",\r\n      headers: { Authorization: `${state.user.access_token}` },\r\n      //headers: { Authorization: `${\"gibberish\"}` },\r\n      data: {\r\n        completed: updatedComplete,\r\n        dateCompleted: updateDateCompleted,\r\n      },\r\n    })\r\n  );\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  function onCompleteHandler() {\r\n    const date = new Date().toLocaleDateString();\r\n    const time = new Date().toLocaleTimeString();\r\n    const updatedComplete = !completed;\r\n    var updateDateCompleted = date + \" \" + time;\r\n    if (!updatedComplete) updateDateCompleted = \"\";\r\n    toggleTodoFunction(id, updatedComplete, updateDateCompleted);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\r\n      toggleData &&\r\n      toggleData.isLoading === false &&\r\n      (toggleData.data || toggleData.error)\r\n    ) {\r\n      if (toggleData.error) {\r\n        setToggleCompleteTodoFailed(true);\r\n        if (toggleData.error.code === 401)\r\n          setStatus(\"Unauthorized to toggle the particular todo\");\r\n      } else {\r\n        dispatch({\r\n          type: \"TOGGLE_TODO\",\r\n          id,\r\n          dateCompleted: toggleData.data.dateCompleted,\r\n          completed: toggleData.data.completed,\r\n        });\r\n        if (!completed) {\r\n          const message = \"task completed suceessfully.\";\r\n          navigation.navigate(\"/success/\" + title + \"/\" + message + \"/\");\r\n        } else {\r\n          const message = \"task updated to incomplete status.\";\r\n          navigation.navigate(\"/success/\" + title + \"/\" + message + \"/\");\r\n        }\r\n      }\r\n    }\r\n  }, [toggleData]);\r\n\r\n  const [deleteData, deleteTodoFunction] = useResource((id) => ({\r\n    url: \"/todoList/\" + id,\r\n    method: \"delete\",\r\n    headers: { Authorization: `${state.user.access_token}` },\r\n    //headers: { Authorization: `${\"gibberish\"}` },\r\n  }));\r\n\r\n  function onDeleteHandler() {\r\n    setShowDeleteModal(true);\r\n\r\n    // deleteTodoFunction(id);\r\n  }\r\n  useEffect(() => {\r\n    if (\r\n      deleteData &&\r\n      deleteData.isLoading === false &&\r\n      (deleteData.data || deleteData.error)\r\n    ) {\r\n      if (deleteData.error) {\r\n        setDeleteTodoFailed(true);\r\n        if (deleteData.error.code === 401)\r\n          setStatus(\"Unauthorized to delete the particular todo\");\r\n      } else {\r\n        dispatch({ type: \"DELETE_TODO\", id });\r\n        const message = \"task deleted sucesssfully.\";\r\n        navigation.navigate(\"/success/\" + title + \"/\" + message + \"/\");\r\n      }\r\n    }\r\n  }, [deleteData]);\r\n  function handleClose() {\r\n    setShowDeleteModal(false);\r\n  }\r\n  function modalDeleteHandler(event) {\r\n    event.preventDefault();\r\n    deleteTodoFunction(id);\r\n\r\n    handleClose();\r\n    // navigation.navigate(\"/delete/\" + title);\r\n    // if (!deleteTodoFailed) {\r\n    //   const message = \"task deleted sucesssfully.\";\r\n    //   navigation.navigate(\"/success/\" + title + \"/\" + message + \"/\");\r\n    // }\r\n  }\r\n\r\n  return (\r\n    // <div style={{ marginLeft: \"-54px\" }}>\r\n    <div>\r\n      <Card style={{ backgroundColor: \"#D6EAF8\" }}>\r\n        <Card.Body>\r\n          <Card.Header as=\"h5\" style={{ backgroundColor: \"#85C1E9\" }}>\r\n            {\" \"}\r\n            <Link href={`/todoList/${id}`}>{title}</Link>\r\n          </Card.Header>\r\n          <Card.Title dark></Card.Title>\r\n          <Card.Subtitle>\r\n            <div>{`Author: ${author}`}</div>\r\n          </Card.Subtitle>\r\n          <Card.Subtitle>\r\n            <div>{`Author-Id: ${authorId}`}</div>\r\n          </Card.Subtitle>\r\n          <Card.Subtitle>\r\n            <div>{`Date Created: ${dateCreated}`}</div>\r\n          </Card.Subtitle>\r\n          <Card.Subtitle>\r\n            <div>{`Description: ${processedContent}`}</div>\r\n          </Card.Subtitle>\r\n          <Card.Subtitle>\r\n            Status: {completed ? \"Completed\" : \"InComplete\"}\r\n          </Card.Subtitle>\r\n          {user.username == author && (\r\n            <div>\r\n              <div>\r\n                <Form.Check\r\n                  type=\"checkbox\"\r\n                  label=\"Task Completed\"\r\n                  id=\"completed\"\r\n                  name=\"completed\"\r\n                  defaultChecked={completed}\r\n                  value={completed}\r\n                  onClick={onCompleteHandler}\r\n                />\r\n              </div>\r\n              <div>\r\n                {completed && (\r\n                  <div>\r\n                    <label htmlFor=\"dateCompleted\"> Completed On :</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"dateCompleted\"\r\n                      id=\"dateCompleted\"\r\n                      value={dateCompleted}\r\n                      disabled={true}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <br />\r\n              <Button variant=\"outline-danger\" onClick={onDeleteHandler}>\r\n                Delete Todo\r\n              </Button>\r\n              &nbsp; &nbsp;\r\n              {short && <Link href={`/todoList/${id}`}>View full todo</Link>}\r\n              <br />\r\n            </div>\r\n          )}\r\n          {(toggleCompleteTodoFailed || deleteTodoFailed) && (\r\n            <Form.Text style={{ color: \"red\" }}>{status}</Form.Text>\r\n          )}\r\n        </Card.Body>\r\n      </Card>\r\n\r\n      <Modal show={showDeleteModal} onHide={handleClose}>\r\n        <Form onSubmit={modalDeleteHandler}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Login</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form.Label htmlFor=\"delete-user\">\r\n              Are you sure you want to delete?\r\n            </Form.Label>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Yes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { useResource } from \"react-request-hook\";\r\nimport { Link } from \"react-navi\";\r\nimport Todo from \"../Todo/Todo\";\r\nimport { StateContext } from \"../Contexts\";\r\n\r\nexport default function TodoPage({ id }) {\r\n  const { state } = useContext(StateContext);\r\n  const [todo, getTodo] = useResource(() => ({\r\n    url: \"/todoList/\" + id,\r\n    method: \"get\",\r\n    headers: { Authorization: `${state.user.access_token}` },\r\n  }));\r\n  useEffect(getTodo, [id]);\r\n\r\n  return (\r\n    <div>\r\n      {todo && todo.data ? <Todo {...todo.data} /> : \"Loading...\"}\r\n      <hr />\r\n      <div>\r\n        <Link href=\"/\">Go back</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport { StateContext } from \"../Contexts\";\r\nimport Todo from \"./Todo\";\r\nimport { Card } from \"react-bootstrap\";\r\n// export default function TodoList({ todoList, dispatch }) {\r\n\r\nexport default function TodoList(props) {\r\n  // const { state } = useContext(StateContext);\r\n  // const { todoList } = state;\r\n  const todoList = props.todoList;\r\n\r\n  return (\r\n    <div>\r\n      <h2>\r\n        <u>Todo List</u>\r\n      </h2>\r\n      <ul>\r\n        <br />\r\n\r\n        {todoList &&\r\n          props.todoList.todoList.map((todoItem, i) => (\r\n            <ol key={\"Todo\" + i}>\r\n              <Todo\r\n                title={todoItem.title}\r\n                author={todoItem.author}\r\n                authorId={todoItem.authorId}\r\n                description={todoItem.description}\r\n                dateCreated={todoItem.dateCreated}\r\n                id={todoItem._id}\r\n                // completed={todoItem.completed}\r\n                dateCompleted={todoItem.dateCompleted}\r\n                {...todoItem}\r\n                short={true}\r\n              />\r\n            </ol>\r\n          ))}\r\n        {\r\n          todoList && todoList.todoList.length === 0 && (\r\n            <Card>\r\n              <Card.Body style={{ backgroundColor: \"#1E90FF\" }}>\r\n                User does not have any task\r\n              </Card.Body>\r\n            </Card>\r\n          )\r\n          //  \"User does not have any task\"\r\n        }\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Button, Card } from \"react-bootstrap\";\r\nimport { Link, useNavigation } from \"react-navi\";\r\nimport { useResource } from \"react-request-hook\";\r\nimport { StateContext } from \"../Contexts\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport TodoList from \"../Todo/TodoList\";\r\nexport default function User(props) {\r\n  const id = props.id;\r\n  const username = props.username;\r\n  const short = props.short;\r\n  const { dispatch, state } = useContext(StateContext);\r\n  const selectedUserTodoList = [];\r\n  const todoList = props;\r\n  //   const selectedUserTodoList = todoList.filter((todos) => {\r\n  //     todos.author === username;\r\n  //     console.log(todos);\r\n  //   });\r\n  //   todoList.forEach((element, i) => {\r\n  //     if (element.author === username) {\r\n  //       selectedUserTodoList.push(<li key={element + i}>{element}</li>);\r\n  //     }\r\n  //   });\r\n\r\n  //   todoList = selectedUserTodoList;\r\n  return (\r\n    <div>\r\n      {/* <div style={{ marginLeft: \"-54px\" }}> */}\r\n      <Card style={{ backgroundColor: \"#D6EAF8\" }}>\r\n        {short && (\r\n          <Card.Body>\r\n            <Card.Header as=\"h5\" style={{ backgroundColor: \"#85C1E9\" }}>\r\n              {\" \"}\r\n              <Link href={`/users/${id}`}>{username}</Link>\r\n            </Card.Header>\r\n            <Card.Title dark></Card.Title>\r\n            <Card.Subtitle>\r\n              <div>{`User Id: ${id}`}</div>\r\n            </Card.Subtitle>\r\n            &nbsp; &nbsp;\r\n            {short && <Link href={`/users/${id}`}>View User Profile</Link>}\r\n            <br />\r\n          </Card.Body>\r\n        )}\r\n        <Card.Body>\r\n          {!short && (\r\n            <TodoList\r\n              // todoList={todoList.filter((todos) => todos.author === username)}\r\n              todoList={todoList}\r\n            />\r\n          )}\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport { StateContext } from \"../Contexts\";\r\nimport User from \"./User\";\r\nexport default function UserList(props) {\r\n  const { state } = useContext(StateContext);\r\n  //const { userList } = state;\r\n  const userList = props.userList.data.userList;\r\n  return (\r\n    <div>\r\n      <h2>\r\n        <u>User List</u>\r\n      </h2>\r\n      <ul>\r\n        {userList.map((user, i) => (\r\n          <ol key={+i}>\r\n            <User id={user._id} username={user.username} short={true} />\r\n          </ol>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport { StateContext } from \"../Contexts\";\r\nimport { useResource } from \"react-request-hook\";\r\nimport TodoList from \"../Todo/TodoList\";\r\n\r\nexport default function HomePage() {\r\n  const { state, dispatch } = useContext(StateContext);\r\n\r\n  const [todoList, getTodos] = useResource(() => ({\r\n    url: \"/todoList\",\r\n    method: \"get\",\r\n    headers: { Authorization: `${state.user.access_token}` },\r\n  }));\r\n\r\n  //useEffect(getTodos, []);\r\n  useEffect(() => {\r\n    getTodos();\r\n  }, [state.user.access_token]);\r\n  useEffect(() => {\r\n    if (todoList && todoList.data && todoList.isLoading === false) {\r\n      dispatch({ type: \"FETCH_TODOS\", todoList: todoList.data.todoList });\r\n    }\r\n  }, [todoList]);\r\n  const { isLoading } = todoList;\r\n  return (\r\n    <>\r\n      {isLoading && \"Todo's loading...\"}\r\n      <TodoList todoList={todoList.data} />\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport { StateContext } from \"../Contexts\";\r\nimport { useResource } from \"react-request-hook\";\r\nimport { useEffect } from \"react\";\r\nimport { Modal, Form, Button } from \"react-bootstrap\";\r\nexport default function Login({ show, handleClose, setShowLogin }) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loginFailed, setLoginFailed] = useState(false);\r\n  let errorMessage = \"\";\r\n  function handleUserName(evt) {\r\n    setUsername(evt.target.value);\r\n  }\r\n  function handlePassword(event) {\r\n    setPassword(event.target.value);\r\n  }\r\n  const { dispatch } = useContext(StateContext);\r\n  // const [user, login] = useResource((username, password) => ({\r\n  //   url: `/login/${encodeURI(username)}/${encodeURI(password)}`,\r\n  //   method: \"get\",\r\n  // }));\r\n  const [user, login] = useResource((username, password) => ({\r\n    url: \"auth/login\",\r\n    method: \"post\",\r\n    data: { username, password },\r\n  }));\r\n\r\n  // useEffect(() => {\r\n  //   if (user && user.data) {\r\n  //     if (user.data.length > 0) {\r\n  //       setLoginFailed(false);\r\n  //       dispatch({ type: \"LOGIN\", username: user.data[0].username });\r\n  //     } else {\r\n  //       setLoginFailed(true);\r\n  //       setShowLogin(true);\r\n  //     }\r\n  //   }\r\n  // }, [user]);\r\n  useEffect(() => {\r\n    if (user && user.isLoading === false && (user.data || user.error)) {\r\n      if (user.error) {\r\n        errorMessage = user.error.data.error;\r\n        setLoginFailed(true);\r\n        setShowLogin(true);\r\n        //  alert(\"failed\");\r\n      } else {\r\n        setLoginFailed(false);\r\n        dispatch({\r\n          type: \"LOGIN\",\r\n          username,\r\n          access_token: user.data.access_token,\r\n        });\r\n      }\r\n    }\r\n  }, [user]);\r\n\r\n  function loginHandler(event) {\r\n    event.preventDefault();\r\n    login(username, password);\r\n  }\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Form\r\n        // onSubmit={(e) => {\r\n        onSubmit={loginHandler}\r\n        // e.preventDefault();\r\n        // login(username, password);\r\n        //  handleClose();\r\n        //   }}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Login</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form.Label htmlFor=\"login-username\">Username:</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={handleUserName}\r\n            name=\"login-username\"\r\n            id=\"login-username\"\r\n            value={username}\r\n            required\r\n          />\r\n          <Form.Label htmlFor=\"login-password\">Password:</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={handlePassword}\r\n            name=\"login-password\"\r\n            id=\"login-password\"\r\n            value={password}\r\n            required\r\n          />\r\n          {loginFailed && (\r\n            <Form.Text style={{ color: \"red\" }}>\r\n              {user.error && user.error.data.error}\r\n            </Form.Text>\r\n          )}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            disabled={username.length === 0}\r\n            type=\"submit\"\r\n          >\r\n            Login\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Form>\r\n    </Modal>\r\n    // <form onSubmit={loginHandler}>\r\n    //   <div>\r\n    //     <label htmlFor=\"login-username\">Username:</label>\r\n    //     <input\r\n    //       type=\"text\"\r\n    //       name=\"login-username\"\r\n    //       id=\"login-username\"\r\n    //       onChange={handleUserName}\r\n    //       value={username}\r\n    //       required\r\n    //     />\r\n    //   </div>\r\n    //   <br />\r\n\r\n    //   <div>\r\n    //     <label htmlFor=\"login-password\">Password:</label>\r\n    //     <input\r\n    //       type=\"password\"\r\n    //       name=\"login-password\"\r\n    //       id=\"login-password\"\r\n    //       onChange={handlePassword}\r\n    //       value={password}\r\n    //       required\r\n    //     />\r\n    //   </div>\r\n    //   <br />\r\n    //   {loginFailed && (\r\n    //     <span style={{ color: \"red\" }}>Invalid username or password</span>\r\n    //   )}\r\n    //   <br />\r\n    //   <input type=\"submit\" value=\"Login\" disabled={username.length === 0} />\r\n    // </form>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { StateContext } from \"../Contexts\";\r\n\r\nexport default function Logout() {\r\n  const { dispatch, state } = useContext(StateContext);\r\n  const { user } = state;\r\n  return (\r\n    <form\r\n      style={{ backgroundColor: \"#85C1E9\" }}\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        dispatch({ type: \"LOGOUT\" });\r\n      }}\r\n    >\r\n      Logged in as: <b>{user.username}</b>&nbsp;\r\n      {/* Logged in as: <b>{user}</b>&nbsp; */}\r\n      <input type=\"submit\" value=\"Logout\" />\r\n    </form>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Button, Form, Modal } from \"react-bootstrap\";\r\nimport { useResource } from \"react-request-hook\";\r\nimport { StateContext } from \"../Contexts\";\r\nexport default function Register({ show, handleClose, setShowRegister }) {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [registrationFailed, setRegistrationFailed] = useState(false);\r\n  const { state, dispatch } = useContext(StateContext);\r\n  function handleUserName(event) {\r\n    setUserName(event.target.value);\r\n  }\r\n\r\n  function handlePassword(event) {\r\n    setPassword(event.target.value);\r\n  }\r\n  function handleConfirmPassword(event) {\r\n    if (password !== event.target.value) {\r\n      event.target.setCustomValidity(\r\n        \"Password and Confirm Password must be same\"\r\n      );\r\n    } else {\r\n      event.target.setCustomValidity(\"\");\r\n    }\r\n  }\r\n  const [status, setStatus] = useState(\"\");\r\n  const [user, register] = useResource(({ userName, password }) => ({\r\n    // url: \"/users\",\r\n    url: \"auth/register\",\r\n    method: \"post\",\r\n    data: {\r\n      username: userName,\r\n      password: password,\r\n      passwordConfirmation: password,\r\n    },\r\n  }));\r\n  // useEffect(() => {}, [state.user.access_token]);\r\n  useEffect(() => {\r\n    if (user && user.data) {\r\n      dispatch({\r\n        type: \"REGISTER\",\r\n        username: user.data.username,\r\n        access_token: user.data.access_token,\r\n      });\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (user && user.isLoading === false && (user.data || user.error)) {\r\n      if (user.error) {\r\n        setRegistrationFailed(true);\r\n        setShowRegister(true);\r\n        if (user.error.data.error.substr(0, 6) === \"E11000\")\r\n          setStatus(\r\n            \"This username is already registered with us, try registering with other username\"\r\n          );\r\n        else setStatus(\"Registration failed, please try again later.\");\r\n        //  alert(\"fail\");\r\n      } else {\r\n        setRegistrationFailed(false);\r\n        setShowRegister(false);\r\n        setStatus(\"Registration successful. You may now login.\");\r\n        //  alert(\"success\");\r\n      } //dispatch({ type: 'REGISTER', username: user.data.username })\r\n    }\r\n  }, [user]);\r\n  function registerHandler(event) {\r\n    event.preventDefault();\r\n    register({ userName, password });\r\n    handleClose();\r\n  }\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Form\r\n        onSubmit={registerHandler}\r\n        // onSubmit={(e) => {\r\n        //   e.preventDefault();\r\n        //   register(formData.username, formData.password);\r\n        //   handleClose();\r\n        // }}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Register</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form.Label htmlFor=\"register-username\">Username:</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            onChange={handleUserName}\r\n            name=\"register-username\"\r\n            id=\"register-username\"\r\n            required\r\n          />\r\n          <Form.Label htmlFor=\"register-password\">Password:</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            name=\"register-password\"\r\n            id=\"register-password\"\r\n            onChange={handlePassword}\r\n            required\r\n          />\r\n          <Form.Label htmlFor=\"register-password-repeat\">\r\n            Repeat password:\r\n          </Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            name=\"register-password-repeat\"\r\n            id=\"register-password-repeat\"\r\n            required\r\n            onChange={handleConfirmPassword}\r\n          />\r\n          {registrationFailed && (\r\n            <Form.Text style={{ color: \"red\" }}>{status}</Form.Text>\r\n          )}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n            disabled={userName.length === 0 || password.length === 0}\r\n          >\r\n            Register\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Form>\r\n    </Modal>\r\n    // <form onSubmit={registerHandler}>\r\n    //   <div>\r\n    //     <label htmlFor=\"register-username\">Username: </label>\r\n    //     <input\r\n    //       type=\"text\"\r\n    //       name=\"register-username\"\r\n    //       id=\"register-username\"\r\n    //       onChange={handleUserName}\r\n    //       required\r\n    //     />\r\n    //   </div>\r\n    //   <br />\r\n\r\n    //   <div>\r\n    //     <label htmlFor=\"register-password\">Password: </label>\r\n    //     <input\r\n    //       type=\"password\"\r\n    //       name=\"register-password\"\r\n    //       id=\"register-password\"\r\n    //       onChange={handlePassword}\r\n    //       required\r\n    //     />\r\n    //   </div>\r\n    //   <br />\r\n\r\n    //   <div>\r\n    //     <label htmlFor=\"register-password-repeat\">\r\n    //       Confirm <br />\r\n    //       password:\r\n    //     </label>{\" \"}\r\n    //     <input\r\n    //       type=\"password\"\r\n    //       name=\"register-password-repeat\"\r\n    //       id=\"register-password-repeat\"\r\n    //       required\r\n    //       onChange={handleConfirmPassword}\r\n    //     />\r\n    //   </div>\r\n    //   <br />\r\n\r\n    //   <input\r\n    //     type=\"submit\"\r\n    //     value=\"Register\"\r\n    //     disabled={userName.length === 0 || password.length === 0}\r\n    //   />\r\n    // </form>\r\n  );\r\n}\r\n","import { useContext, useState } from \"react\";\r\nimport { Button, Container, Card, CardGroup } from \"react-bootstrap\";\r\nimport { Link, useNavigation } from \"react-navi\";\r\nimport { StateContext } from \"../Contexts\";\r\nimport HomePage from \"../pages/HomePage\";\r\nimport Login from \"./Login\";\r\nimport Logout from \"./Logout\";\r\nimport Register from \"./Register\";\r\nimport \"../style.css\";\r\nexport default function UserBar() {\r\n  const navigation = useNavigation();\r\n  const { state } = useContext(StateContext);\r\n  const { user } = state;\r\n  const [showLogin, setShowLogin] = useState(false);\r\n  const [showRegister, setShowRegister] = useState(false);\r\n\r\n  if (user.username) {\r\n    return (\r\n      <Container>\r\n        <Logout />\r\n        <hr />\r\n        {user.username && <Link href=\"/todoList/create\">Create New Todo</Link>}\r\n        &nbsp;&nbsp;\r\n        {user.username && <Link href=\"/users\">List All Users</Link>}\r\n        <hr />\r\n        <HomePage />\r\n      </Container>\r\n    );\r\n  } else {\r\n    return (\r\n      <Container>\r\n        <CardGroup>\r\n          <Card style={{ backgroundColor: \"#85C1E9\", border: \"none\" }}>\r\n            <Card.Img\r\n              className=\"card-width\"\r\n              src={process.env.PUBLIC_URL + \"/MyTodoLogo.jpg\"}\r\n              alt=\"Card image\"\r\n              style={{ width: \"73%\", alignSelf: \"center\" }}\r\n            />\r\n          </Card>\r\n\r\n          <Card\r\n            className=\"text-center\"\r\n            style={{\r\n              marginLeft: \"10px\",\r\n              marginTop: \"30px\",\r\n              alignSelf: \"center\",\r\n            }}\r\n          >\r\n            <Card.Header style={{ backgroundColor: \"#D6EAF8\" }}>\r\n              {\" \"}\r\n              <h5>\r\n                <b>\r\n                  <i>Your Daily Planner</i>\r\n                </b>\r\n              </h5>\r\n            </Card.Header>\r\n            <Card.Img\r\n              variant=\"top\"\r\n              src={process.env.PUBLIC_URL + \"/Logo.png\"}\r\n              style={{\r\n                width: \"45%\",\r\n                height: \"55%\",\r\n                alignSelf: \"center\",\r\n              }}\r\n            />\r\n            <Card.Body>\r\n              <Card.Title>\r\n                <h5> Already Have an Account?</h5>\r\n              </Card.Title>\r\n\r\n              {!user.username && (\r\n                <div className=\"justify-content-end\">\r\n                  <Button variant=\"link\" onClick={(e) => setShowLogin(true)}>\r\n                    <h5> Login </h5>\r\n                  </Button>\r\n                  <Login\r\n                    show={showLogin}\r\n                    handleClose={() => setShowLogin(false)}\r\n                    setShowLogin={setShowLogin}\r\n                  />\r\n                </div>\r\n              )}\r\n            </Card.Body>\r\n            <Card.Footer\r\n              className=\"text-muted\"\r\n              style={{ backgroundColor: \"#D6EAF8\" }}\r\n            >\r\n              Sign Up For New User\r\n              <br />\r\n              <Button variant=\"link\" onClick={(e) => setShowRegister(true)}>\r\n                <h5> Register </h5>\r\n              </Button>\r\n              <Register\r\n                show={showRegister}\r\n                handleClose={() => setShowRegister(false)}\r\n                setShowRegister={setShowRegister}\r\n              />\r\n            </Card.Footer>\r\n          </Card>\r\n        </CardGroup>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport { StateContext } from \"../Contexts\";\r\nimport { useResource } from \"react-request-hook\";\r\nimport UserList from \"../User/UserList\";\r\nimport UserBar from \"../User/UserBar\";\r\nimport { useNavigation } from \"react-navi\";\r\nimport { Link } from \"react-navi\";\r\n\r\nexport default function UserListPage() {\r\n  const { dispatch } = useContext(StateContext);\r\n\r\n  const [userList, getUsers] = useResource(() => ({\r\n    url: \"/users\",\r\n    method: \"get\",\r\n  }));\r\n\r\n  useEffect(getUsers, []);\r\n\r\n  useEffect(() => {\r\n    if (userList && userList.data && userList.isLoading === false) {\r\n      dispatch({ type: \"FETCH_USERS\", userList: userList.data });\r\n    }\r\n  }, [userList]);\r\n\r\n  const { isLoading } = userList;\r\n  return (\r\n    <>\r\n      {isLoading && \"User's loading...\"}\r\n      {!isLoading && userList.data && <UserList userList={userList} />}\r\n      <Link href=\"/\">Go back</Link>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useResource } from \"react-request-hook\";\r\nimport { Link } from \"react-navi\";\r\nimport User from \"../User/User\";\r\n\r\nexport default function UserPage({ id }) {\r\n  const [user, getUser] = useResource(() => ({\r\n    url: \"/users/\" + id,\r\n    method: \"get\",\r\n  }));\r\n  useEffect(getUser, [id]);\r\n\r\n  return (\r\n    <div>\r\n      {user && user.data ? <User {...user.data} /> : \"Loading...\"}\r\n      <hr />\r\n      <div>\r\n        <Link href=\"/\">Go back</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default function appReducer(state, action) {\r\n  function userReducer(state, action) {\r\n    switch (action.type) {\r\n      case \"LOGIN\":\r\n      // case \"REGISTER\":\r\n      //   return action.username;\r\n      // case \"LOGOUT\":\r\n      //   return \"\";\r\n      case \"REGISTER\":\r\n        return {\r\n          username: action.username,\r\n          access_token: action.access_token,\r\n        };\r\n      case \"LOGOUT\":\r\n        return {\r\n          username: undefined,\r\n          access_token: undefined,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  function todoReducer(state, action) {\r\n    switch (action.type) {\r\n      case \"CREATE_TODO\":\r\n        const createTodoJson = {\r\n          id: action.id,\r\n          title: action.title,\r\n          author: action.author,\r\n          authorId: action.authorId,\r\n          description: action.description,\r\n          dateCreated: action.dateCreated,\r\n          completed: action.completed,\r\n          dateCompleted: action.dateCompleted,\r\n        };\r\n        return [createTodoJson, ...state];\r\n      case \"TOGGLE_TODO\": {\r\n        state.map((todo) => {\r\n          if (todo.id === action.id) {\r\n            todo.completed = action.completed;\r\n            todo.dateCompleted = action.dateCompleted;\r\n          }\r\n        });\r\n\r\n        return state;\r\n      }\r\n      case \"DELETE_TODO\": {\r\n        return state.filter((x) => x.id !== action.id);\r\n      }\r\n      case \"FETCH_TODOS\": {\r\n        return action.todoList;\r\n      }\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  function userListReducer(state, action) {\r\n    switch (action.type) {\r\n      case \"FETCH_USERS\": {\r\n        return action.userList;\r\n      }\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  return {\r\n    userList: userListReducer(state.userList, action),\r\n    user: userReducer(state.user, action),\r\n    todoList: todoReducer(state.todoList, action),\r\n  };\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport { StateContext } from \"../Contexts\";\r\nimport { useResource } from \"react-request-hook\";\r\nimport { useEffect } from \"react\";\r\nimport { useNavigation } from \"react-navi\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { Link } from \"react-navi\";\r\nexport default function CreateTodo() {\r\n  const navigation = useNavigation();\r\n  const { dispatch, state } = useContext(StateContext);\r\n  const { user } = state;\r\n  const [createTodoFailed, setCreateTodoFailed] = useState(false);\r\n  const [status, setStatus] = useState(\"\");\r\n  const [createTodoObject, setCreateTodoObject] = useState({\r\n    title: \"\",\r\n    author: user.username,\r\n    description: \"\",\r\n    dateCreated: new Date().toLocaleDateString(),\r\n    completed: false,\r\n    dateCompleted: \"\",\r\n  });\r\n\r\n  const [todo, createTodos] = useResource(({ createTodoObject }) => ({\r\n    url: \"/todoList\",\r\n    method: \"post\",\r\n    headers: { Authorization: `${state.user.access_token}` },\r\n    //headers: { Authorization: `${\"gibberish\"}` },\r\n    data: {\r\n      title: createTodoObject.title,\r\n      author: createTodoObject.author,\r\n      authorId: createTodoObject.authorId,\r\n      description: createTodoObject.description,\r\n      dateCreated: createTodoObject.dateCreated,\r\n      completed: createTodoObject.completed,\r\n      dateCompleted: createTodoObject.dateCompleted,\r\n    },\r\n  }));\r\n\r\n  function handleOnSubmit(event) {\r\n    event.preventDefault();\r\n    createTodos({ createTodoObject });\r\n    setCreateTodoObject({\r\n      title: \"\",\r\n      author: user.username,\r\n      description: \"\",\r\n      dateCreated: new Date().toLocaleDateString(),\r\n      completed: false,\r\n      dateCompleted: \"\",\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    if (todo && todo.isLoading === false && (todo.data || todo.error)) {\r\n      if (todo.error) {\r\n        setCreateTodoFailed(true);\r\n        if (todo.error.code === 401)\r\n          setStatus(\"Unauthorized to create the particular todo\");\r\n      } else {\r\n        dispatch({\r\n          type: \"CREATE_TODO\",\r\n          id: todo.data.id,\r\n          title: todo.data.title,\r\n          author: todo.data.author,\r\n          authorId: todo.data.authorId,\r\n          description: todo.data.description,\r\n          dateCreated: todo.data.dateCreated,\r\n          completed: todo.data.completed,\r\n          dateCompleted: todo.data.dateCompleted,\r\n        });\r\n        navigation.navigate(`/todoList/${todo.data.id}`);\r\n      }\r\n    }\r\n  }, [todo]);\r\n\r\n  return (\r\n    <div style={{ alignItems: \"center\" }}>\r\n      <form onSubmit={handleOnSubmit}>\r\n        <div>\r\n          <h2>\r\n            <u>Create Todo Task</u>\r\n          </h2>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"title\">\r\n            <b> Title: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</b>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            id=\"title\"\r\n            onChange={(event) => {\r\n              setCreateTodoObject({\r\n                ...createTodoObject,\r\n                title: event.target.value,\r\n              });\r\n            }}\r\n            value={createTodoObject.title}\r\n            required\r\n          />\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <label htmlFor=\"description\">\r\n            <b>Description: </b>\r\n          </label>\r\n          <textarea\r\n            name=\"description\"\r\n            id=\"description\"\r\n            onChange={(event) => {\r\n              setCreateTodoObject({\r\n                ...createTodoObject,\r\n                description: event.target.value,\r\n              });\r\n            }}\r\n            value={createTodoObject.description}\r\n          />\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <input type=\"submit\" value=\"Create\" />\r\n          <br />\r\n          {createTodoFailed && (\r\n            <Form.Text style={{ color: \"red\" }}>{status}</Form.Text>\r\n          )}\r\n        </div>\r\n        <br />\r\n        <Link href=\"/\">Go back</Link>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useResource } from \"react-request-hook\";\r\nimport { Link } from \"react-navi\";\r\nimport { Card, Container } from \"react-bootstrap\";\r\nexport default function SuccessMessagePage({ title, message }) {\r\n  return (\r\n    <Container\r\n      style={{\r\n        padding: \"50px\",\r\n        backgroundColor: \"#85C1E9\",\r\n      }}\r\n    >\r\n      <hr />\r\n      <Card>\r\n        <Card.Header style={{ backgroundColor: \"#1E90FF\" }}>\r\n          <h5>Status</h5>\r\n        </Card.Header>\r\n        <Card.Body style={{ backgroundColor: \"#D6EAF8\" }}>\r\n          {/* <blockquote className=\"blockquote mb-0\"> */}\r\n          <p>{title.toUpperCase() + \" \" + message}</p>\r\n          {/* </blockquote> */}\r\n          <hr />\r\n          <Link href=\"/\">Go back</Link>\r\n        </Card.Body>\r\n      </Card>\r\n      <hr />\r\n    </Container>\r\n  );\r\n}\r\n","import { mount, route } from \"navi\";\r\nimport React, { useReducer } from \"react\";\r\nimport { Router, View } from \"react-navi\";\r\nimport { StateContext } from \"./Contexts\";\r\nimport TodoPage from \"./pages/TodoPage\";\r\nimport UserListPage from \"./pages/UserListPage\";\r\nimport UserPage from \"./pages/UserPage\";\r\n//import * as myConstClass from \"./Todo/DummyTodoList\";\r\nimport appReducer from \"./Reducer\";\r\nimport CreateTodo from \"./Todo/CreateTodo\";\r\nimport UserBar from \"./User/UserBar\";\r\nimport SuccessMessagePage from \"./pages/SuccessMessagePage.js\";\r\nimport TodoList from \"./Todo/TodoList\";\r\nfunction App() {\r\n  const [state, dispatch] = useReducer(appReducer, {\r\n    // user: \"\",\r\n    user: {},\r\n    todoList: [],\r\n    userList: [],\r\n  });\r\n  const routes = mount({\r\n    \"/\": route({ view: <UserBar /> }),\r\n    \"/users\": route({ view: <UserListPage /> }),\r\n    \"/todoList/create\": route({ view: <CreateTodo /> }),\r\n    // \"/todoList\": route({ view: <TodoList todoList={state.todoList} /> }),\r\n    \"/todoList/:id\": route((req) => {\r\n      return { view: <TodoPage id={req.params.id} /> };\r\n    }),\r\n    \"/success/:title/:message\": route((req) => {\r\n      return {\r\n        view: (\r\n          <SuccessMessagePage\r\n            title={req.params.title}\r\n            message={req.params.message}\r\n          />\r\n        ),\r\n      };\r\n    }),\r\n    \"/users/:id\": route((req) => {\r\n      return { view: <UserPage id={req.params.id} /> };\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <StateContext.Provider value={{ state: state, dispatch: dispatch }}>\r\n        <Router routes={routes}>\r\n          {/* <div style={{ padding: 8 }}> */}\r\n          {/* <Container> */}\r\n          {/* <UserBar /> */}\r\n          <View />\r\n          {/* </Container> */}\r\n          {/* </div> */}\r\n        </Router>\r\n      </StateContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport axios from \"axios\";\r\nimport { RequestProvider } from \"react-request-hook\";\r\nconst axiosInstance = axios.create({\r\n  //baseURL: \"http://localhost:3000/api/\",\r\n  baseURL: \"/api\",\r\n});\r\n\r\nReactDOM.render(\r\n  <RequestProvider value={axiosInstance}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n    ,\r\n  </RequestProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}